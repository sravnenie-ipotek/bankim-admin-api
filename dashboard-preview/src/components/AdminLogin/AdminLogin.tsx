import React, { useState } from 'react';
import { useAuth, UserRole } from '../../contexts/AuthContext';
import './AdminLogin.css';

const AdminLogin: React.FC = () => {
  const { login, loading } = useAuth();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [selectedRole, setSelectedRole] = useState<UserRole>('director');
  const [error, setError] = useState('');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');

    if (!email || !password) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }

    const success = await login(email, password, selectedRole);
    if (!success) {
      setError('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É');
    }
  };

  const roles: { value: UserRole; label: string }[] = [
    { value: 'director', label: 'üëë –î–∏—Ä–µ–∫—Ç–æ—Ä' },
    { value: 'administration', label: '‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' },
    { value: 'sales-manager', label: 'üìä –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º' },
    { value: 'content-manager', label: 'üìù –ö–æ–Ω—Ç–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä' },
    { value: 'brokers', label: 'ü§ù –ë—Ä–æ–∫–µ—Ä' },
    { value: 'bank-employee', label: 'üè¶ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –±–∞–Ω–∫–∞' }
  ];

  return (
    <div className="admin-login">
      <div className="login-container">
        <div className="login-header">
          <h1>üè¶ BankIM Admin Portal</h1>
          <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞</p>
        </div>

        <form onSubmit={handleSubmit} className="login-form">
          <div className="form-group">
            <label htmlFor="email">Email:</label>
            <input
              type="email"
              id="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="admin@bankim.com"
              required
            />
          </div>

          <div className="form-group">
            <label htmlFor="password">–ü–∞—Ä–æ–ª—å:</label>
            <input
              type="password"
              id="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
              required
            />
          </div>

          <div className="form-group">
            <label htmlFor="role">–†–æ–ª—å:</label>
            <select
              id="role"
              value={selectedRole}
              onChange={(e) => setSelectedRole(e.target.value as UserRole)}
            >
              {roles.map((role) => (
                <option key={role.value} value={role.value}>
                  {role.label}
                </option>
              ))}
            </select>
          </div>

          {error && (
            <div className="error-message">
              ‚ùå {error}
            </div>
          )}

          <button type="submit" disabled={loading} className="login-btn">
            {loading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É'}
          </button>
        </form>

        <div className="demo-note">
          <h3>üß™ –î–µ–º–æ-—Ä–µ–∂–∏–º</h3>
          <p>–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Ñ–æ—Ä–º—É–ª:</p>
          <ul>
            <li><strong>–î–∏—Ä–µ–∫—Ç–æ—Ä:</strong> –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</li>
            <li><strong>–î—Ä—É–≥–∏–µ —Ä–æ–ª–∏:</strong> –¢–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default AdminLogin; 